<map version="1.0.1">
<!-- To view this file, download free mind mapping software FreeMind from http://freemind.sourceforge.net -->
<node CREATED="1505705543106" ID="ID_1022947014" MODIFIED="1510758885421">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      React
    </p>
    <p>
      &#22522;&#32447;&#29256;&#26412;&#65306;16.1.1
    </p>
  </body>
</html></richcontent>
<node CREATED="1505706645333" FOLDED="true" ID="ID_810871137" MODIFIED="1511181451240" POSITION="right" TEXT="&#x5feb;&#x901f;&#x5f00;&#x59cb;">
<node CREATED="1505706725462" ID="ID_1498308317" MODIFIED="1505734515714">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#23433;&#35013;
    </p>
    <p>
      1&#12289;&#21019;&#24314;&#26032;&#24212;&#29992;
    </p>
    <p>
      &#20351;&#29992;Create React App
    </p>
    <p>
      npm install -g create-react-app
    </p>
    <p>
      create-react-app my-app
    </p>
    <p>
      
    </p>
    <p>
      cd my-app
    </p>
    <p>
      npm start
    </p>
    <p>
      2&#12289;&#28155;&#21152;React&#21040;&#29616;&#26377;&#39033;&#30446;
    </p>
    <p>
      &#65288;1&#65289;&#12289;&#20351;&#29992; npm &#23433;&#35013; React&#65306;
    </p>
    <p>
      npm init
    </p>
    <p>
      npm install --save react react-dom
    </p>
    <p>
      &#65288;2&#65289;&#12289;&#22522;&#26412;&#20363;&#23376;
    </p>
    <p>
      import React from 'react';
    </p>
    <p>
      import ReactDOM from 'react-dom';
    </p>
    <p>
      ReactDOM.render(
    </p>
    <p>
      &#160;&#160;&lt;h1&gt;Hello, world!&lt;/h1&gt;,
    </p>
    <p>
      &#160;&#160;document.getElementById('root')
    </p>
    <p>
      );
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1505734969757" ID="ID_420312131" MODIFIED="1510820445587">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      JSX&#31616;&#20171;
    </p>
    <p>
      1&#12289;&#22312;JSX&#20013;&#20351;&#29992;&#34920;&#36798;&#24335;
    </p>
    <p>
      &#29992;&#22823;&#25324;&#21495;&#25324;&#36215;&#26469;
    </p>
    <p>
      &#25105;&#20204;&#20070;&#20889; JSX &#30340;&#26102;&#20505;&#19968;&#33324;&#37117;&#20250;&#24102;&#19978;&#25442;&#34892;&#21644;&#32553;&#36827;&#65292;&#36825;&#26679;&#21487;&#20197;&#22686;&#24378;&#20195;&#30721;&#30340;&#21487;&#35835;&#24615;&#12290;&#19982;&#27492;&#21516;&#26102;&#65292;&#25105;&#20204;&#21516;&#26679;&#25512;&#33616;&#22312; JSX &#20195;&#30721;&#30340;&#22806;&#38754;&#25193;&#19978;&#19968;&#20010;&#23567;&#25324;&#21495;&#65292;&#36825;&#26679;&#21487;&#20197;&#38450;&#27490; &#20998;&#21495;&#33258;&#21160;&#25554;&#20837; &#30340;bug&#65288;http://stackoverflow.com/q/2846283&#65289;
    </p>
    <p>
      2&#12289;JSX&#26412;&#36523;&#20854;&#23454;&#20063;&#26159;&#19968;&#31181;&#34920;&#36798;&#24335;
    </p>
    <p>
      &#22312;&#32534;&#35793;&#20043;&#21518;&#21602;&#65292;JSX &#20854;&#23454;&#20250;&#34987;&#36716;&#21270;&#20026;&#26222;&#36890;&#30340; JavaScript &#23545;&#35937;&#12290;
    </p>
    <p>
      &#36825;&#20063;&#23601;&#24847;&#21619;&#30528;&#65292;&#20320;&#20854;&#23454;&#21487;&#20197;&#22312; if &#25110;&#32773; for &#35821;&#21477;&#37324;&#20351;&#29992; JSX&#65292;&#23558;&#23427;&#36171;&#20540;&#32473;&#21464;&#37327;&#65292;&#24403;&#20316;&#21442;&#25968;&#20256;&#20837;&#65292;&#20316;&#20026;&#36820;&#22238;&#20540;&#37117;&#21487;&#20197;&#65306;
    </p>
    <p>
      function getGreeting(user) {
    </p>
    <p>
      &#160;&#160;if (user) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;return &lt;h1&gt;Hello, {formatName(user)}!&lt;/h1&gt;;
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      &#160;&#160;return &lt;h1&gt;Hello, Stranger.&lt;/h1&gt;;
    </p>
    <p>
      }
    </p>
    <p>
      3&#12289;JSX&#23646;&#24615;
    </p>
    <p>
      &#20320;&#21487;&#20197;&#20351;&#29992;&#24341;&#21495;&#26469;&#23450;&#20041;&#20197;&#23383;&#31526;&#20018;&#20026;&#20540;&#30340;&#23646;&#24615;&#65306;
    </p>
    <p>
      const element = &lt;div tabIndex=&quot;0&quot;&gt;&lt;/div&gt;;
    </p>
    <p>
      &#20063;&#21487;&#20197;&#20351;&#29992;&#22823;&#25324;&#21495;&#26469;&#23450;&#20041;&#20197; JavaScript &#34920;&#36798;&#24335;&#20026;&#20540;&#30340;&#23646;&#24615;&#65306;
    </p>
    <p>
      const element = &lt;img src={user.avatarUrl}&gt;&lt;/img&gt;;
    </p>
    <p>
      &#20999;&#35760;&#20320;&#20351;&#29992;&#20102;&#22823;&#25324;&#21495;&#21253;&#35065;&#30340; JavaScript &#34920;&#36798;&#24335;&#26102;&#23601;&#19981;&#35201;&#20877;&#21040;&#22806;&#38754;&#22871;&#24341;&#21495;&#20102;&#12290;JSX &#20250;&#23558;&#24341;&#21495;&#24403;&#20013;&#30340;&#20869;&#23481;&#35782;&#21035;&#20026;&#23383;&#31526;&#20018;&#32780;&#19981;&#26159;&#34920;&#36798;&#24335;&#12290;
    </p>
    <p>
      4&#12289;JSX&#23884;&#22871;
    </p>
    <p>
      &#22240;&#20026; JSX &#30340;&#29305;&#24615;&#26356;&#25509;&#36817; JavaScript &#32780;&#19981;&#26159; HTML , &#25152;&#20197; React DOM &#20351;&#29992; camelCase &#23567;&#39548;&#23792;&#21629;&#21517; &#26469;&#23450;&#20041;&#23646;&#24615;&#30340;&#21517;&#31216;&#65292;&#32780;&#19981;&#26159;&#20351;&#29992; HTML &#30340;&#23646;&#24615;&#21517;&#31216;&#12290;
    </p>
    <p>
      &#20363;&#22914;&#65292;class &#21464;&#25104;&#20102; className&#65292;&#32780; tabindex &#21017;&#23545;&#24212;&#30528; tabIndex.
    </p>
    <p>
      5&#12289;JSX&#38450;&#27880;&#20837;&#25915;&#20987;
    </p>
    <p>
      &#20320;&#21487;&#20197;&#25918;&#24515;&#22320;&#22312; JSX &#24403;&#20013;&#20351;&#29992;&#29992;&#25143;&#36755;&#20837;&#65306;
    </p>
    <p>
      const title = response.potentiallyMaliciousInput;
    </p>
    <p>
      // &#30452;&#25509;&#20351;&#29992;&#26159;&#23433;&#20840;&#30340;&#65306;
    </p>
    <p>
      const element = &lt;h1&gt;{title}&lt;/h1&gt;;
    </p>
    <p>
      React DOM &#22312;&#28210;&#26579;&#20043;&#21069;&#40664;&#35748;&#20250; &#36807;&#28388; &#25152;&#26377;&#20256;&#20837;&#30340;&#20540;&#12290;&#23427;&#21487;&#20197;&#30830;&#20445;&#20320;&#30340;&#24212;&#29992;&#19981;&#20250;&#34987;&#27880;&#20837;&#25915;&#20987;&#12290;&#25152;&#26377;&#30340;&#20869;&#23481;&#22312;&#28210;&#26579;&#20043;&#21069;&#37117;&#34987;&#36716;&#25442;&#25104;&#20102;&#23383;&#31526;&#20018;&#12290;&#36825;&#26679;&#21487;&#20197;&#26377;&#25928;&#22320;&#38450;&#27490; XSS(&#36328;&#31449;&#33050;&#26412;) &#25915;&#20987;&#12290;
    </p>
    <p>
      6&#12289;JSX&#30340;&#23545;&#35937;&#34920;&#31034;
    </p>
    <p>
      const element = (
    </p>
    <p>
      &#160;&#160;&lt;h1 className=&quot;greeting&quot;&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;Hello, world!
    </p>
    <p>
      &#160;&#160;&lt;/h1&gt;
    </p>
    <p>
      );
    </p>
    <p>
      &#32463;babel&#22788;&#29702;&#20043;&#21518;
    </p>
    <p>
      const element = React.createElement(
    </p>
    <p>
      &#160;&#160;'h1',
    </p>
    <p>
      &#160;&#160;{className: 'greeting'},
    </p>
    <p>
      &#160;&#160;'Hello, world!'
    </p>
    <p>
      );
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1505736469915" ID="ID_887648474" MODIFIED="1505738177648">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#20803;&#32032;&#28210;&#26579;
    </p>
    <p>
      1&#12289;&#26356;&#26032;&#20803;&#32032;&#28210;&#26579;
    </p>
    <p>
      React &#20803;&#32032;&#37117;&#26159;immutable &#19981;&#21487;&#21464;&#30340;&#12290;&#24403;&#20803;&#32032;&#34987;&#21019;&#24314;&#20043;&#21518;&#65292;&#20320;&#26159;&#26080;&#27861;&#25913;&#21464;&#20854;&#20869;&#23481;&#25110;&#23646;&#24615;&#30340;&#12290;&#19968;&#20010;&#20803;&#32032;&#23601;&#22909;&#20687;&#26159;&#21160;&#30011;&#37324;&#30340;&#19968;&#24103;&#65292;&#23427;&#20195;&#34920;&#24212;&#29992;&#30028;&#38754;&#22312;&#26576;&#19968;&#26102;&#38388;&#28857;&#30340;&#26679;&#23376;&#12290;
    </p>
    <p>
      &#26681;&#25454;&#25105;&#20204;&#29616;&#38454;&#27573;&#20102;&#35299;&#30340;&#26377;&#20851; React &#30693;&#35782;&#65292;&#26356;&#26032;&#30028;&#38754;&#30340;&#21807;&#19968;&#21150;&#27861;&#26159;&#21019;&#24314;&#19968;&#20010;&#26032;&#30340;&#20803;&#32032;&#65292;&#28982;&#21518;&#23558;&#23427;&#20256;&#20837; ReactDOM.render() &#26041;&#27861;
    </p>
    <p>
      &#22312;&#23454;&#38469;&#29983;&#20135;&#24320;&#21457;&#20013;, &#22823;&#22810;&#25968;React&#24212;&#29992;&#21482;&#20250;&#35843;&#29992;&#19968;&#27425; ReactDOM.render() . &#22312;&#19979;&#19968;&#20010;&#31456;&#33410;&#20013;&#25105;&#20204;&#23558;&#20250;&#35814;&#32454;&#20171;&#32461; &#26377;&#29366;&#24577;&#32452;&#20214; &#23454;&#29616; DOM &#26356;&#26032;&#26041;&#24335;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1510821183262" ID="ID_222957656" MODIFIED="1510895885555">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#32452;&#20214;&#21644;&#23646;&#24615;
    </p>
    <p>
      1&#12289;&#20989;&#25968;&#32452;&#20214;&#21644;&#31867;&#32452;&#20214;
    </p>
    <p>
      &#65288;1&#65289;&#12289;&#20989;&#25968;&#24335;
    </p>
    <p>
      function Welcome(props) {
    </p>
    <p>
      &#160;&#160;return &lt;h1&gt;Hello, {props.name}&lt;/h1&gt;;
    </p>
    <p>
      }
    </p>
    <p>
      &#65288;2&#65289;&#12289;&#31867;&#24335;
    </p>
    <p>
      class Welcome extends React.Component {
    </p>
    <p>
      &#160;&#160;render() {
    </p>
    <p>
      &#160;&#160;&#160;&#160;return &lt;h1&gt;Hello, {this.props.name}&lt;/h1&gt;;
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      }
    </p>
    <p>
      2&#12289;&#28210;&#26579;&#32452;&#20214;
    </p>
    <p>
      3&#12289;&#32452;&#21512;&#32452;&#20214;
    </p>
    <p>
      4&#12289;&#23646;&#24615;&#26159;&#21482;&#35835;&#30340;
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1510898649146" ID="ID_1988333292" MODIFIED="1511052710247">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#29366;&#24577;&#21644;&#29983;&#21629;&#21608;&#26399;
    </p>
    <p>
      1&#12289;state&#21482;&#36866;&#29992;&#20110;&#29992;&#31867;&#22768;&#26126;&#30340;&#32452;&#20214;
    </p>
    <p>
      2&#12289;state&#21644;prop&#30456;&#20284;&#65292;&#23427;&#26159;&#32452;&#20214;&#33258;&#24049;&#32500;&#25252;&#30340;
    </p>
    <p>
      3&#12289;&#27491;&#30830;&#30340;&#20351;&#29992;state
    </p>
    <p>
      &#65288;1&#65289;&#12289;&#19981;&#35201;&#30452;&#25509;&#20462;&#25913;state&#65292;&#32780;&#35201;&#29992;this.setState&#26041;&#27861;&#65292;&#30452;&#25509;&#20351;&#29992;this.state&#21482;&#33021;&#26159;&#22312;&#26500;&#36896;&#20989;&#25968;&#20013;
    </p>
    <p>
      &#65288;2&#65289;&#12289;state&#26356;&#26032;&#21487;&#33021;&#26159;&#24322;&#27493;&#30340;
    </p>
    <p>
      &#20026;&#20102;&#24615;&#33021;&#26041;&#38754;&#30340;&#32771;&#34385;&#65292;React&#20250;&#23558;&#22810;&#20010;setState&#35843;&#29992;&#25171;&#21253;&#22788;&#29702;
    </p>
    <p>
      &#25152;&#20197;&#19981;&#33021;&#30452;&#25509;&#20381;&#36182;this.state&#21644;this.props&#26469;&#35745;&#31639;&#19979;&#19968;&#27493;&#30340;&#29366;&#24577;&#65292;&#20363;&#22914;&#65306;
    </p>
    <p>
      // Wrong
    </p>
    <p>
      this.setState({
    </p>
    <p>
      &#160;&#160;counter: this.state.counter + this.props.increment,
    </p>
    <p>
      });
    </p>
    <p>
      &#38024;&#23545;&#36825;&#31181;&#24773;&#20917;&#65292;&#25105;&#20204;&#21487;&#20197;&#65306;
    </p>
    <p>
      // Correct
    </p>
    <p>
      this.setState((prevState, props) =&gt; ({
    </p>
    <p>
      &#160;&#160;counter: prevState.counter + props.increment
    </p>
    <p>
      }));
    </p>
    <p>
      &#65288;3&#65289;&#12289;&#29366;&#24577;&#21512;&#24182;
    </p>
    <p>
      &#27604;&#22914;&#26377;&#19968;&#20010;&#23545;&#35937;&#25110;&#25968;&#32452;&#31867;&#22411;&#30340;&#29366;&#24577;&#65292;&#22312;&#26356;&#26032;&#26102;&#26159;&#21069;&#21512;&#24182;&#65292;&#21363;&#30452;&#25509;&#25226;&#30456;&#24212;state&#30340;&#23436;&#20840;&#26367;&#25442;&#25481;
    </p>
  </body>
</html>
</richcontent>
</node>
<node CREATED="1511052713703" ID="ID_1541481288" MODIFIED="1511053488163">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#22788;&#29702;&#20107;&#20214;
    </p>
    <p>
      1&#12289;React&#20107;&#20214;&#37319;&#29992;&#39548;&#23792;&#24335;&#20889;&#27861;&#65292;&#19981;&#35201;&#29992;&#24341;&#21495;&#25324;&#36215;&#26469;
    </p>
    <p>
      &lt;button onClick={activateLasers}&gt;
    </p>
    <p>
      &#160;&#160;Activate Lasers
    </p>
    <p>
      &lt;/button&gt;
    </p>
    <p>
      2&#12289;&#38459;&#27490;&#20107;&#20214;&#40664;&#35748;&#34892;&#20026;&#65292;&#38656;&#35201;&#26174;&#24335;&#35843;&#29992;e.preventDefault
    </p>
    <p>
      function ActionLink() {
    </p>
    <p>
      &#160;&#160;function handleClick(e) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;e.preventDefault();
    </p>
    <p>
      &#160;&#160;&#160;&#160;console.log('The link was clicked.');
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;return (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;a href=&quot;#&quot; onClick={handleClick}&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;Click me
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;/a&gt;
    </p>
    <p>
      &#160;&#160;);
    </p>
    <p>
      }
    </p>
    <p>
      3&#12289;&#20351;&#29992;&#31867;&#35821;&#27861;&#65292;&#38656;&#35201;&#26174;&#24335;&#32465;&#23450;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;&#30340;this
    </p>
    <p>
      class Toggle extends React.Component {
    </p>
    <p>
      &#160;&#160;constructor(props) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;super(props);
    </p>
    <p>
      &#160;&#160;&#160;&#160;this.state = {isToggleOn: true};
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// This binding is necessary to make `this` work in the callback
    </p>
    <p>
      &#160;&#160;&#160;&#160;this.handleClick = this.handleClick.bind(this);
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;handleClick() {
    </p>
    <p>
      &#160;&#160;&#160;&#160;this.setState(prevState =&gt; ({
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;isToggleOn: !prevState.isToggleOn
    </p>
    <p>
      &#160;&#160;&#160;&#160;}));
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;render() {
    </p>
    <p>
      &#160;&#160;&#160;&#160;return (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;button onClick={this.handleClick}&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{this.state.isToggleOn ? 'ON' : 'OFF'}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;/button&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;);
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      ReactDOM.render(
    </p>
    <p>
      &#160;&#160;&lt;Toggle /&gt;,
    </p>
    <p>
      &#160;&#160;document.getElementById('root')
    </p>
    <p>
      );
    </p>
    <p>
      4&#12289;&#21521;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;&#20256;&#21442;
    </p>
    <p>
      &lt;button onClick={(e) =&gt; this.deleteRow(id, e)}&gt;Delete Row&lt;/button&gt;
    </p>
    <p>
      &lt;button onClick={this.deleteRow.bind(this, id)}&gt;Delete Row&lt;/button&gt;
    </p>
  </body>
</html>
</richcontent>
</node>
<node CREATED="1511077014918" ID="ID_1567515817" MODIFIED="1511077792307">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#26465;&#20214;&#28210;&#26579;
    </p>
    <p>
      1&#12289;&#20363;&#23376;
    </p>
    <p>
      function Greeting(props) {
    </p>
    <p>
      &#160;&#160;const isLoggedIn = props.isLoggedIn;
    </p>
    <p>
      &#160;&#160;if (isLoggedIn) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;return &lt;UserGreeting /&gt;;
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      &#160;&#160;return &lt;GuestGreeting /&gt;;
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      ReactDOM.render(
    </p>
    <p>
      &#160;&#160;// Try changing to isLoggedIn={true}:
    </p>
    <p>
      &#160;&#160;&lt;Greeting isLoggedIn={false} /&gt;,
    </p>
    <p>
      &#160;&#160;document.getElementById('root')
    </p>
    <p>
      );
    </p>
    <p>
      2&#12289;&#20803;&#32032;&#21464;&#37327;
    </p>
    <p>
      &#160;&#160;render() {
    </p>
    <p>
      &#160;&#160;&#160;&#160;const isLoggedIn = this.state.isLoggedIn;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;let button = null;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (isLoggedIn) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;button = &lt;LogoutButton onClick={this.handleLogoutClick} /&gt;;
    </p>
    <p>
      &#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;button = &lt;LoginButton onClick={this.handleLoginClick} /&gt;;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;return (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;div&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Greeting isLoggedIn={isLoggedIn} /&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{button}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;/div&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;);
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      3&#12289;&#29992;&amp;&amp;&#36816;&#31639;&#31526;&#23454;&#29616;&#20869;&#32852;&#26465;&#20214;
    </p>
    <p>
      function Mailbox(props) {
    </p>
    <p>
      &#160;&#160;const unreadMessages = props.unreadMessages;
    </p>
    <p>
      &#160;&#160;return (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;div&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;h1&gt;Hello!&lt;/h1&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;{unreadMessages.length &gt; 0 &amp;&amp;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;h2&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;You have {unreadMessages.length} unread messages.
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/h2&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;/div&gt;
    </p>
    <p>
      &#160;&#160;);
    </p>
    <p>
      }
    </p>
    <p>
      4&#12289;&#29992;?:&#36816;&#31639;&#31526;&#23454;&#29616;&#26465;&#20214;
    </p>
    <p>
      render() {
    </p>
    <p>
      &#160;&#160;const isLoggedIn = this.state.isLoggedIn;
    </p>
    <p>
      &#160;&#160;return (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;div&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;{isLoggedIn ? (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;LogoutButton onClick={this.handleLogoutClick} /&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;) : (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;LoginButton onClick={this.handleLoginClick} /&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;)}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;/div&gt;
    </p>
    <p>
      &#160;&#160;);
    </p>
    <p>
      }
    </p>
    <p>
      5&#12289;&#19981;&#28210;&#26579;&#32452;&#20214;&#20869;&#23481;&#65292;&#36820;&#22238;null&#65292;&#27880;&#24847;&#36820;&#22238;null&#32452;&#20214;&#30340;&#29983;&#21629;&#21608;&#26399;&#20989;&#25968;&#36824;&#26159;&#20250;&#25191;&#34892;&#30340;
    </p>
    <p>
      function WarningBanner(props) {
    </p>
    <p>
      &#160;&#160;if (!props.warn) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;return null;
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;return (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;div className=&quot;warning&quot;&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;Warning!
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;/div&gt;
    </p>
    <p>
      &#160;&#160;);
    </p>
    <p>
      }
    </p>
  </body>
</html>
</richcontent>
</node>
<node CREATED="1511077801659" ID="ID_1306441577" MODIFIED="1511078847792">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#21015;&#34920;&#21644;key
    </p>
    <p>
      1&#12289;&#28210;&#26579;&#22810;&#32452;&#20214;
    </p>
    <p>
      const numbers = [1, 2, 3, 4, 5];
    </p>
    <p>
      const listItems = numbers.map((number) =&gt;
    </p>
    <p>
      &#160;&#160;&lt;li&gt;{number}&lt;/li&gt;
    </p>
    <p>
      );
    </p>
    <p>
      ReactDOM.render(
    </p>
    <p>
      &#160;&#160;&lt;ul&gt;{listItems}&lt;/ul&gt;,
    </p>
    <p>
      &#160;&#160;document.getElementById('root')
    </p>
    <p>
      );
    </p>
    <p>
      2&#12289;&#21015;&#34920;&#32452;&#20214;
    </p>
    <p>
      function NumberList(props) {
    </p>
    <p>
      &#160;&#160;const numbers = props.numbers;
    </p>
    <p>
      &#160;&#160;const listItems = numbers.map((number) =&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;li&gt;{number}&lt;/li&gt;
    </p>
    <p>
      &#160;&#160;);
    </p>
    <p>
      &#160;&#160;return (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;ul&gt;{listItems}&lt;/ul&gt;
    </p>
    <p>
      &#160;&#160;);
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      const numbers = [1, 2, 3, 4, 5];
    </p>
    <p>
      ReactDOM.render(
    </p>
    <p>
      &#160;&#160;&lt;NumberList numbers={numbers} /&gt;,
    </p>
    <p>
      &#160;&#160;document.getElementById('root')
    </p>
    <p>
      );
    </p>
    <p>
      &#24403;&#36816;&#34892;&#35813;&#20195;&#30721;&#26102;&#65292;&#20250;&#25910;&#21040;&#19968;&#20010;&#21578;&#35686;&#65292;&#25552;&#31034;&#38656;&#35201;&#20026;&#21015;&#34920;&#39033;&#35774;&#32622;&#19968;&#20010;key&#23646;&#24615;
    </p>
    <p>
      3&#12289;key
    </p>
    <p>
      &#36319;vue&#30340;&#29992;&#27861;&#19968;&#26679;
    </p>
  </body>
</html>
</richcontent>
</node>
<node CREATED="1511078868658" ID="ID_1217986100" MODIFIED="1511079976780">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#34920;&#21333;
    </p>
    <p>
      1&#12289;&#25511;&#21046;&#32452;&#20214;
    </p>
    <p>
      &#27604;vue&#35201;&#22797;&#26434;&#65292;&#36755;&#20837;&#21644;&#29366;&#24577;&#38388;&#30340;&#21516;&#27493;&#38656;&#35201;&#25163;&#21160;&#26469;&#23436;&#25104;&#12290;
    </p>
  </body>
</html>
</richcontent>
</node>
<node CREATED="1511092278532" ID="ID_1423876964" MODIFIED="1511106363885">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#23558;&#29366;&#24577;&#25552;&#21319;
    </p>
    <p>
      1&#12289;&#22914;&#26524;&#20960;&#20010;&#32452;&#20214;&#35201;&#38024;&#23545;&#21516;&#19968;&#20010;&#25968;&#25454;&#21709;&#24212;UI&#65292;&#21017;&#21487;&#20197;&#23558;&#35813;&#25968;&#25454;&#25552;&#21462;&#20986;&#26469;&#65292;&#25918;&#21040;&#23427;&#20204;&#30340;&#29238;&#32452;&#20214;&#30340;state&#20013;&#65292;&#20877;&#36890;&#36807;prop&#20256;&#36882;&#32473;&#23376;&#32452;&#20214;
    </p>
  </body>
</html>
</richcontent>
</node>
<node CREATED="1511106456389" ID="ID_978421334" MODIFIED="1511146976139">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#32452;&#21512;vs&#32487;&#25215;
    </p>
    <p>
      1&#12289;&#25512;&#33616;&#20351;&#29992;&#32452;&#21512;
    </p>
    <p>
      2&#12289;&#21253;&#21547;&#65288;&#31867;&#20284;vue&#30340;slot&#65289;
    </p>
    <p>
      function FancyBorder(props) {
    </p>
    <p>
      &#160;&#160;return (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;div className={'FancyBorder FancyBorder-' + props.color}&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;{props.children}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;/div&gt;
    </p>
    <p>
      &#160;&#160;);
    </p>
    <p>
      }
    </p>
    <p>
      function WelcomeDialog() {
    </p>
    <p>
      &#160;&#160;return (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;FancyBorder color=&quot;blue&quot;&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;h1 className=&quot;Dialog-title&quot;&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Welcome
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;/h1&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;p className=&quot;Dialog-message&quot;&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Thank you for visiting our spacecraft!
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;/p&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;/FancyBorder&gt;
    </p>
    <p>
      &#160;&#160;);
    </p>
    <p>
      }
    </p>
    <p>
      &#20197;&#19979;&#31867;&#20284;&#20110;&#20855;&#21517;&#25554;&#27133;
    </p>
    <p>
      function SplitPane(props) {
    </p>
    <p>
      &#160;&#160;return (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;div className=&quot;SplitPane&quot;&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;div className=&quot;SplitPane-left&quot;&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{props.left}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;/div&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;div className=&quot;SplitPane-right&quot;&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{props.right}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&lt;/div&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;/div&gt;
    </p>
    <p>
      &#160;&#160;);
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      function App() {
    </p>
    <p>
      &#160;&#160;return (
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;SplitPane
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;left={
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Contacts /&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;right={
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Chat /&gt;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;} /&gt;
    </p>
    <p>
      &#160;&#160;);
    </p>
    <p>
      }
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1511181460422" ID="ID_1195938303" MODIFIED="1511181474536" POSITION="right">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#28145;&#20837;&#24341;&#23548;
    </p>
  </body>
</html>
</richcontent>
<node CREATED="1511181478467" ID="ID_1882792523" MODIFIED="1511181988798">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#28145;&#20837;JSX
    </p>
    <p>
      1&#12289;JSX&#26159;React.createElement(component, props, ...children)&#30340;&#35821;&#27861;&#31958;
    </p>
    <p>
      2&#12289;&#22240;&#20026;&#36716;&#25442;&#21518;&#35201;&#29992;&#21040;React&#21644;&#20855;&#20307;&#30340;&#32452;&#20214;&#20195;&#30721;&#65292;&#25152;&#20197;&#19979;&#38754;&#20195;&#30721;&#20013;&#30340;import&#26159;&#24517;&#38656;&#30340;
    </p>
    <p>
      import React from 'react';
    </p>
    <p>
      import CustomButton from './CustomButton';
    </p>
    <p>
      function WarningButton() {
    </p>
    <p>
      &#160;&#160;// return React.createElement(CustomButton, {color: 'red'}, null);
    </p>
    <p>
      &#160;&#160;return &lt;CustomButton color=&quot;red&quot; /&gt;;
    </p>
    <p>
      }
    </p>
    <p>
      3&#12289;&#26377;&#26102;&#20505;&#21487;&#33021;&#19968;&#20010;&#27169;&#22359;&#20250;&#26292;&#38706;&#20986;&#22810;&#20010;&#32452;&#20214;&#65292;&#37027;&#20040;&#32452;&#20214;&#21487;&#20197;&#36890;&#36807;&#28857;&#21495;&#26469;&#35775;&#38382;
    </p>
    <p>
      import React from 'react';
    </p>
    <p>
      const MyComponents = {
    </p>
    <p>
      &#160;&#160;DatePicker: function DatePicker(props) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;return &lt;div&gt;Imagine a {props.color} datepicker here.&lt;/div&gt;;
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      }
    </p>
    <p>
      function BlueDatePicker() {
    </p>
    <p>
      &#160;&#160;return &lt;MyComponents.DatePicker color=&quot;blue&quot; /&gt;;
    </p>
    <p>
      }
    </p>
    <p>
      4&#12289;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1510812635865" ID="ID_1466204335" MODIFIED="1510814009717" POSITION="left">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#30097;&#38382;
    </p>
    <p>
      1&#12289;react&#12289;react-dom&#26159;&#20160;&#20040;&#65311;
    </p>
    <p>
      2&#12289;JSX&#26159;&#24590;&#20040;&#35299;&#26512;&#30340;&#65311;
    </p>
  </body>
</html></richcontent>
</node>
</node>
</map>
