<map version="1.0.1">
<!-- To view this file, download free mind mapping software FreeMind from http://freemind.sourceforge.net -->
<node CREATED="1506343665802" ID="ID_683136024" MODIFIED="1506343671208" TEXT="ES6">
<node CREATED="1506344278960" FOLDED="true" ID="ID_1955356079" MODIFIED="1508074898150" POSITION="right" TEXT="Promise">
<node CREATED="1506344652578" ID="ID_655152306" MODIFIED="1506344659140">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      Promise&#20063;&#26377;&#19968;&#20123;&#32570;&#28857;&#12290;&#39318;&#20808;&#65292;&#26080;&#27861;&#21462;&#28040;Promise&#65292;&#19968;&#26086;&#26032;&#24314;&#23427;&#23601;&#20250;&#31435;&#21363;&#25191;&#34892;&#65292;&#26080;&#27861;&#20013;&#36884;&#21462;&#28040;&#12290;&#20854;&#27425;&#65292;&#22914;&#26524;&#19981;&#35774;&#32622;&#22238;&#35843;&#20989;&#25968;&#65292;Promise&#20869;&#37096;&#25243;&#20986;&#30340;&#38169;&#35823;&#65292;&#19981;&#20250;&#21453;&#24212;&#21040;&#22806;&#37096;&#12290;&#31532;&#19977;&#65292;&#24403;&#22788;&#20110;pending&#29366;&#24577;&#26102;&#65292;&#26080;&#27861;&#24471;&#30693;&#30446;&#21069;&#36827;&#23637;&#21040;&#21738;&#19968;&#20010;&#38454;&#27573;&#65288;&#21018;&#21018;&#24320;&#22987;&#36824;&#26159;&#21363;&#23558;&#23436;&#25104;&#65289;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1506344673257" ID="ID_759143477" MODIFIED="1506344675237" TEXT="&#x5982;&#x679c;&#x67d0;&#x4e9b;&#x4e8b;&#x4ef6;&#x4e0d;&#x65ad;&#x5730;&#x53cd;&#x590d;&#x53d1;&#x751f;&#xff0c;&#x4e00;&#x822c;&#x6765;&#x8bf4;&#xff0c;&#x4f7f;&#x7528; Stream &#x6a21;&#x5f0f;&#x662f;&#x6bd4;&#x90e8;&#x7f72;Promise&#x66f4;&#x597d;&#x7684;&#x9009;&#x62e9;&#x3002;"/>
<node CREATED="1506344969880" ID="ID_1482868846" MODIFIED="1506345254618">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#22914;&#26524;&#35843;&#29992;resolve&#20989;&#25968;&#21644;reject&#20989;&#25968;&#26102;&#24102;&#26377;&#21442;&#25968;&#65292;&#37027;&#20040;&#23427;&#20204;&#30340;&#21442;&#25968;&#20250;&#34987;&#20256;&#36882;&#32473;&#22238;&#35843;&#20989;&#25968;&#12290;reject&#20989;&#25968;&#30340;&#21442;&#25968;&#36890;&#24120;&#26159;Error&#23545;&#35937;&#30340;&#23454;&#20363;&#65292;&#34920;&#31034;&#25243;&#20986;&#30340;&#38169;&#35823;&#65307;resolve&#20989;&#25968;&#30340;&#21442;&#25968;&#38500;&#20102;&#27491;&#24120;&#30340;&#20540;&#20197;&#22806;&#65292;&#36824;&#21487;&#33021;&#26159;&#21478;&#19968;&#20010; Promise &#23454;&#20363;&#65292;&#27604;&#22914;&#20687;&#19979;&#38754;&#36825;&#26679;&#12290;
    </p>
    <p>
      var p1 = new Promise(function (resolve, reject) {
    </p>
    <p>
      &#160;&#160;// ...
    </p>
    <p>
      });
    </p>
    <p>
      var p2 = new Promise(function (resolve, reject) {
    </p>
    <p>
      &#160;&#160;// ...
    </p>
    <p>
      &#160;&#160;resolve(p1);
    </p>
    <p>
      })
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;p1&#21644;p2&#37117;&#26159; Promise &#30340;&#23454;&#20363;&#65292;&#20294;&#26159;p2&#30340;resolve&#26041;&#27861;&#23558;p1&#20316;&#20026;&#21442;&#25968;&#65292;&#21363;&#19968;&#20010;&#24322;&#27493;&#25805;&#20316;&#30340;&#32467;&#26524;&#26159;&#36820;&#22238;&#21478;&#19968;&#20010;&#24322;&#27493;&#25805;&#20316;&#12290;
    </p>
    <p>
      &#27880;&#24847;&#65292;&#36825;&#26102;p1&#30340;&#29366;&#24577;&#23601;&#20250;&#20256;&#36882;&#32473;p2&#65292;&#20063;&#23601;&#26159;&#35828;&#65292;p1&#30340;&#29366;&#24577;&#20915;&#23450;&#20102;p2&#30340;&#29366;&#24577;&#12290;&#22914;&#26524;p1&#30340;&#29366;&#24577;&#26159;pending&#65292;&#37027;&#20040;p2&#30340;&#22238;&#35843;&#20989;&#25968;&#23601;&#20250;&#31561;&#24453;p1&#30340;&#29366;&#24577;&#25913;&#21464;&#65307;&#22914;&#26524;p1&#30340;&#29366;&#24577;&#24050;&#32463;&#26159;resolved&#25110;&#32773;rejected&#65292;&#37027;&#20040;p2&#30340;&#22238;&#35843;&#20989;&#25968;&#23558;&#20250;&#31435;&#21051;&#25191;&#34892;&#12290;
    </p>
    <p>
      var p1 = new Promise(function (resolve, reject) {
    </p>
    <p>
      &#160;&#160;setTimeout(() =&gt; reject(new Error('fail')), 3000)
    </p>
    <p>
      })
    </p>
    <p>
      var p2 = new Promise(function (resolve, reject) {
    </p>
    <p>
      &#160;&#160;setTimeout(() =&gt; resolve(p1), 1000)
    </p>
    <p>
      })
    </p>
    <p>
      p2
    </p>
    <p>
      &#160;&#160;.then(result =&gt; console.log(result))
    </p>
    <p>
      &#160;&#160;.catch(error =&gt; console.log(error))
    </p>
    <p>
      // Error: fail
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;p1&#26159;&#19968;&#20010;Promise&#65292;3&#31186;&#20043;&#21518;&#21464;&#20026;rejected&#12290;p2&#30340;&#29366;&#24577;&#22312;1&#31186;&#20043;&#21518;&#25913;&#21464;&#65292;resolve&#26041;&#27861;&#36820;&#22238;&#30340;&#26159;p1&#12290;&#30001;&#20110;p2&#36820;&#22238;&#30340;&#26159;&#21478;&#19968;&#20010; Promise&#65292;&#23548;&#33268;p2&#33258;&#24049;&#30340;&#29366;&#24577;&#26080;&#25928;&#20102;&#65292;&#30001;p1&#30340;&#29366;&#24577;&#20915;&#23450;p2&#30340;&#29366;&#24577;&#12290;&#25152;&#20197;&#65292;&#21518;&#38754;&#30340;then&#35821;&#21477;&#37117;&#21464;&#25104;&#38024;&#23545;&#21518;&#32773;&#65288;p1&#65289;&#12290;&#21448;&#36807;&#20102;2&#31186;&#65292;p1&#21464;&#20026;rejected&#65292;&#23548;&#33268;&#35302;&#21457;catch&#26041;&#27861;&#25351;&#23450;&#30340;&#22238;&#35843;&#20989;&#25968;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1506345258342" ID="ID_72939557" MODIFIED="1506345307380">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#27880;&#24847;&#65292;&#35843;&#29992;resolve&#25110;reject&#24182;&#19981;&#20250;&#32456;&#32467; Promise &#30340;&#21442;&#25968;&#20989;&#25968;&#30340;&#25191;&#34892;&#12290;
    </p>
    <p>
      new Promise((resolve, reject) =&gt; {
    </p>
    <p>
      &#160;&#160;resolve(1);
    </p>
    <p>
      &#160;&#160;console.log(2);
    </p>
    <p>
      }).then(r =&gt; {
    </p>
    <p>
      &#160;&#160;console.log(r);
    </p>
    <p>
      });
    </p>
    <p>
      // 2
    </p>
    <p>
      // 1
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;&#35843;&#29992;resolve(1)&#20197;&#21518;&#65292;&#21518;&#38754;&#30340;console.log(2)&#36824;&#26159;&#20250;&#25191;&#34892;&#65292;&#24182;&#19988;&#20250;&#39318;&#20808;&#25171;&#21360;&#20986;&#26469;&#12290;&#36825;&#26159;&#22240;&#20026;&#31435;&#21363; resolved &#30340; Promise &#26159;&#22312;&#26412;&#36718;&#20107;&#20214;&#24490;&#29615;&#30340;&#26411;&#23614;&#25191;&#34892;&#65292;&#24635;&#26159;&#26202;&#20110;&#26412;&#36718;&#24490;&#29615;&#30340;&#21516;&#27493;&#20219;&#21153;&#12290;
    </p>
    <p>
      &#19968;&#33324;&#26469;&#35828;&#65292;&#35843;&#29992;resolve&#25110;reject&#20197;&#21518;&#65292;Promise &#30340;&#20351;&#21629;&#23601;&#23436;&#25104;&#20102;&#65292;&#21518;&#32487;&#25805;&#20316;&#24212;&#35813;&#25918;&#21040;then&#26041;&#27861;&#37324;&#38754;&#65292;&#32780;&#19981;&#24212;&#35813;&#30452;&#25509;&#20889;&#22312;resolve&#25110;reject&#30340;&#21518;&#38754;&#12290;&#25152;&#20197;&#65292;&#26368;&#22909;&#22312;&#23427;&#20204;&#21069;&#38754;&#21152;&#19978;return&#35821;&#21477;&#65292;&#36825;&#26679;&#23601;&#19981;&#20250;&#26377;&#24847;&#22806;&#12290;
    </p>
    <p>
      new Promise((resolve, reject) =&gt; {
    </p>
    <p>
      &#160;&#160;return resolve(1);
    </p>
    <p>
      &#160;&#160;// &#21518;&#38754;&#30340;&#35821;&#21477;&#19981;&#20250;&#25191;&#34892;
    </p>
    <p>
      &#160;&#160;console.log(2);
    </p>
    <p>
      })
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1506345579338" ID="ID_1450700618" MODIFIED="1506346019096">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      then&#26041;&#27861;&#36820;&#22238;&#30340;&#26159;&#19968;&#20010;&#26032;&#30340;Promise&#23454;&#20363;&#65288;&#27880;&#24847;&#65292;&#19981;&#26159;&#21407;&#26469;&#37027;&#20010;Promise&#23454;&#20363;&#65289;&#12290;&#22240;&#27492;&#21487;&#20197;&#37319;&#29992;&#38142;&#24335;&#20889;&#27861;&#65292;&#21363;then&#26041;&#27861;&#21518;&#38754;&#20877;&#35843;&#29992;&#21478;&#19968;&#20010;then&#26041;&#27861;&#12290;
    </p>
    <p>
      getJSON(&quot;/posts.json&quot;).then(function(json) {
    </p>
    <p>
      &#160;&#160;return json.post;
    </p>
    <p>
      }).then(function(post) {
    </p>
    <p>
      &#160;&#160;// ...
    </p>
    <p>
      });
    </p>
    <p>
      &#19978;&#38754;&#30340;&#20195;&#30721;&#20351;&#29992;then&#26041;&#27861;&#65292;&#20381;&#27425;&#25351;&#23450;&#20102;&#20004;&#20010;&#22238;&#35843;&#20989;&#25968;&#12290;&#31532;&#19968;&#20010;&#22238;&#35843;&#20989;&#25968;&#23436;&#25104;&#20197;&#21518;&#65292;&#20250;&#23558;&#36820;&#22238;&#32467;&#26524;&#20316;&#20026;&#21442;&#25968;&#65292;&#20256;&#20837;&#31532;&#20108;&#20010;&#22238;&#35843;&#20989;&#25968;&#12290;
    </p>
    <p>
      &#37319;&#29992;&#38142;&#24335;&#30340;then&#65292;&#21487;&#20197;&#25351;&#23450;&#19968;&#32452;&#25353;&#29031;&#27425;&#24207;&#35843;&#29992;&#30340;&#22238;&#35843;&#20989;&#25968;&#12290;&#36825;&#26102;&#65292;&#21069;&#19968;&#20010;&#22238;&#35843;&#20989;&#25968;&#65292;&#26377;&#21487;&#33021;&#36820;&#22238;&#30340;&#36824;&#26159;&#19968;&#20010;Promise&#23545;&#35937;&#65288;&#21363;&#26377;&#24322;&#27493;&#25805;&#20316;&#65289;&#65292;&#36825;&#26102;&#21518;&#19968;&#20010;&#22238;&#35843;&#20989;&#25968;&#65292;&#23601;&#20250;&#31561;&#24453;&#35813;Promise&#23545;&#35937;&#30340;&#29366;&#24577;&#21457;&#29983;&#21464;&#21270;&#65292;&#25165;&#20250;&#34987;&#35843;&#29992;&#12290;
    </p>
    <p>
      &#37319;&#29992;&#38142;&#24335;&#30340;then&#65292;&#21487;&#20197;&#25351;&#23450;&#19968;&#32452;&#25353;&#29031;&#27425;&#24207;&#35843;&#29992;&#30340;&#22238;&#35843;&#20989;&#25968;&#12290;&#36825;&#26102;&#65292;&#21069;&#19968;&#20010;&#22238;&#35843;&#20989;&#25968;&#65292;&#26377;&#21487;&#33021;&#36820;&#22238;&#30340;&#36824;&#26159;&#19968;&#20010;Promise&#23545;&#35937;&#65288;&#21363;&#26377;&#24322;&#27493;&#25805;&#20316;&#65289;&#65292;&#36825;&#26102;&#21518;&#19968;&#20010;&#22238;&#35843;&#20989;&#25968;&#65292;&#23601;&#20250;&#31561;&#24453;&#35813;Promise&#23545;&#35937;&#30340;&#29366;&#24577;&#21457;&#29983;&#21464;&#21270;&#65292;&#25165;&#20250;&#34987;&#35843;&#29992;&#12290;
    </p>
    <p>
      getJSON(&quot;/post/1.json&quot;).then(function(post) {
    </p>
    <p>
      &#160;&#160;return getJSON(post.commentURL);
    </p>
    <p>
      }).then(function funcA(comments) {
    </p>
    <p>
      &#160;&#160;console.log(&quot;resolved: &quot;, comments);
    </p>
    <p>
      }, function funcB(err){
    </p>
    <p>
      &#160;&#160;console.log(&quot;rejected: &quot;, err);
    </p>
    <p>
      });
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;&#31532;&#19968;&#20010;then&#26041;&#27861;&#25351;&#23450;&#30340;&#22238;&#35843;&#20989;&#25968;&#65292;&#36820;&#22238;&#30340;&#26159;&#21478;&#19968;&#20010;Promise&#23545;&#35937;&#12290;&#36825;&#26102;&#65292;&#31532;&#20108;&#20010;then&#26041;&#27861;&#25351;&#23450;&#30340;&#22238;&#35843;&#20989;&#25968;&#65292;&#23601;&#20250;&#31561;&#24453;&#36825;&#20010;&#26032;&#30340;Promise&#23545;&#35937;&#29366;&#24577;&#21457;&#29983;&#21464;&#21270;&#12290;&#22914;&#26524;&#21464;&#20026;resolved&#65292;&#23601;&#35843;&#29992;funcA&#65292;&#22914;&#26524;&#29366;&#24577;&#21464;&#20026;rejected&#65292;&#23601;&#35843;&#29992;funcB&#12290;
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1506352801873" ID="ID_1989305579" MODIFIED="1506353384039">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      Promise.prototype.catch&#26041;&#27861;&#26159;.then(null, rejection)&#30340;&#21035;&#21517;&#65292;&#29992;&#20110;&#25351;&#23450;&#21457;&#29983;&#38169;&#35823;&#26102;&#30340;&#22238;&#35843;&#20989;&#25968;&#12290;
    </p>
    <p>
      getJSON('/posts.json').then(function(posts) {
    </p>
    <p>
      &#160;&#160;// ...
    </p>
    <p>
      }).catch(function(error) {
    </p>
    <p>
      &#160;&#160;// &#22788;&#29702; getJSON &#21644; &#21069;&#19968;&#20010;&#22238;&#35843;&#20989;&#25968;&#36816;&#34892;&#26102;&#21457;&#29983;&#30340;&#38169;&#35823;
    </p>
    <p>
      &#160;&#160;console.log('&#21457;&#29983;&#38169;&#35823;&#65281;', error);
    </p>
    <p>
      });
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;getJSON&#26041;&#27861;&#36820;&#22238;&#19968;&#20010; Promise &#23545;&#35937;&#65292;&#22914;&#26524;&#35813;&#23545;&#35937;&#29366;&#24577;&#21464;&#20026;resolved&#65292;&#21017;&#20250;&#35843;&#29992;then&#26041;&#27861;&#25351;&#23450;&#30340;&#22238;&#35843;&#20989;&#25968;&#65307;&#22914;&#26524;&#24322;&#27493;&#25805;&#20316;&#25243;&#20986;&#38169;&#35823;&#65292;&#29366;&#24577;&#23601;&#20250;&#21464;&#20026;rejected&#65292;&#23601;&#20250;&#35843;&#29992;catch&#26041;&#27861;&#25351;&#23450;&#30340;&#22238;&#35843;&#20989;&#25968;&#65292;&#22788;&#29702;&#36825;&#20010;&#38169;&#35823;&#12290;&#21478;&#22806;&#65292;then&#26041;&#27861;&#25351;&#23450;&#30340;&#22238;&#35843;&#20989;&#25968;&#65292;&#22914;&#26524;&#36816;&#34892;&#20013;&#25243;&#20986;&#38169;&#35823;&#65292;&#20063;&#20250;&#34987;catch&#26041;&#27861;&#25429;&#33719;&#12290;
    </p>
    <p>
      p.then((val) =&gt; console.log('fulfilled:', val))
    </p>
    <p>
      &#160;&#160;.catch((err) =&gt; console.log('rejected', err));
    </p>
    <p>
      // &#31561;&#21516;&#20110;
    </p>
    <p>
      p.then((val) =&gt; console.log('fulfilled:', val))
    </p>
    <p>
      &#160;&#160;.then(null, (err) =&gt; console.log(&quot;rejected:&quot;, err));
    </p>
    <p>
      
    </p>
    <p>
      var promise = new Promise(function(resolve, reject) {
    </p>
    <p>
      &#160;&#160;throw new Error('test');
    </p>
    <p>
      });
    </p>
    <p>
      promise.catch(function(error) {
    </p>
    <p>
      &#160;&#160;console.log(error);
    </p>
    <p>
      });
    </p>
    <p>
      // Error: test
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1506353215597" ID="ID_680860472" MODIFIED="1506354537685">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      Promise &#23545;&#35937;&#30340;&#38169;&#35823;&#20855;&#26377;&#8220;&#20882;&#27873;&#8221;&#24615;&#36136;&#65292;&#20250;&#19968;&#30452;&#21521;&#21518;&#20256;&#36882;&#65288;catch&#26041;&#27861;&#65292;&#25110;&#32773;then&#30340;&#31532;&#20108;&#20010;&#26041;&#27861;&#65289;&#65292;&#30452;&#21040;&#34987;&#25429;&#33719;&#20026;&#27490;&#12290;&#20063;&#23601;&#26159;&#35828;&#65292;&#38169;&#35823;&#24635;&#26159;&#20250;&#34987;&#19979;&#19968;&#20010;catch&#35821;&#21477;&#25429;&#33719;&#12290;
    </p>
    <p>
      getJSON('/post/1.json').then(function(post) {
    </p>
    <p>
      &#160;&#160;return getJSON(post.commentURL);
    </p>
    <p>
      }).then(function(comments) {
    </p>
    <p>
      &#160;&#160;// some code
    </p>
    <p>
      }).catch(function(error) {
    </p>
    <p>
      &#160;&#160;// &#22788;&#29702;&#21069;&#38754;&#19977;&#20010;Promise&#20135;&#29983;&#30340;&#38169;&#35823;
    </p>
    <p>
      });
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;&#19968;&#20849;&#26377;&#19977;&#20010;Promise&#23545;&#35937;&#65306;&#19968;&#20010;&#30001;getJSON&#20135;&#29983;&#65292;&#20004;&#20010;&#30001;then&#20135;&#29983;&#12290;&#23427;&#20204;&#20043;&#20013;&#20219;&#20309;&#19968;&#20010;&#25243;&#20986;&#30340;&#38169;&#35823;&#65292;&#37117;&#20250;&#34987;&#26368;&#21518;&#19968;&#20010;catch&#25429;&#33719;&#12290;
    </p>
    <p>
      &#19968;&#33324;&#26469;&#35828;&#65292;&#19981;&#35201;&#22312;then&#26041;&#27861;&#37324;&#38754;&#23450;&#20041;Reject&#29366;&#24577;&#30340;&#22238;&#35843;&#20989;&#25968;&#65288;&#21363;then&#30340;&#31532;&#20108;&#20010;&#21442;&#25968;&#65289;&#65292;&#24635;&#26159;&#20351;&#29992;catch&#26041;&#27861;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      &#27880;&#24847;&#65292;&#22312;&#19968;&#27425;then&#30340;&#35843;&#29992;&#20013;&#65292;&#31532;&#20108;&#20010;&#26041;&#27861;&#25429;&#33719;&#19981;&#21040;&#31532;&#19968;&#20010;&#26041;&#27861;&#20013;&#25243;&#20986;&#30340;&#24322;&#24120;
    </p>
    <p>
      Promise.resolve(1).then(function() {
    </p>
    <p>
      &#160;&#160;&#160;&#160;throw new Error('error1');
    </p>
    <p>
      }, function() {
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#36825;&#37324;&#25429;&#33719;&#19981;&#21040;&#31532;&#19968;&#20010;&#20989;&#25968;&#20013;&#25243;&#20986;&#30340;&#38169;&#35823;
    </p>
    <p>
      });
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1506353602339" ID="ID_94159725" MODIFIED="1506353617517">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#36319;&#20256;&#32479;&#30340;try/catch&#20195;&#30721;&#22359;&#19981;&#21516;&#30340;&#26159;&#65292;&#22914;&#26524;&#27809;&#26377;&#20351;&#29992;catch&#26041;&#27861;&#25351;&#23450;&#38169;&#35823;&#22788;&#29702;&#30340;&#22238;&#35843;&#20989;&#25968;&#65292;Promise &#23545;&#35937;&#25243;&#20986;&#30340;&#38169;&#35823;&#19981;&#20250;&#20256;&#36882;&#21040;&#22806;&#23618;&#20195;&#30721;&#65292;&#21363;&#19981;&#20250;&#26377;&#20219;&#20309;&#21453;&#24212;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      const someAsyncThing = function() {
    </p>
    <p>
      &#160;&#160;return new Promise(function(resolve, reject) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#19979;&#38754;&#19968;&#34892;&#20250;&#25253;&#38169;&#65292;&#22240;&#20026;x&#27809;&#26377;&#22768;&#26126;
    </p>
    <p>
      &#160;&#160;&#160;&#160;resolve(x + 2);
    </p>
    <p>
      &#160;&#160;});
    </p>
    <p>
      };
    </p>
    <p>
      
    </p>
    <p>
      someAsyncThing().then(function() {
    </p>
    <p>
      &#160;&#160;console.log('everything is great');
    </p>
    <p>
      });
    </p>
    <p>
      
    </p>
    <p>
      setTimeout(() =&gt; { console.log(123) }, 2000);
    </p>
    <p>
      // Uncaught (in promise) ReferenceError: x is not defined
    </p>
    <p>
      // 123
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;someAsyncThing&#20989;&#25968;&#20135;&#29983;&#30340; Promise &#23545;&#35937;&#65292;&#20869;&#37096;&#26377;&#35821;&#27861;&#38169;&#35823;&#12290;&#27983;&#35272;&#22120;&#36816;&#34892;&#21040;&#36825;&#19968;&#34892;&#65292;&#20250;&#25171;&#21360;&#20986;&#38169;&#35823;&#25552;&#31034;ReferenceError: x is not defined&#65292;&#20294;&#26159;&#19981;&#20250;&#36864;&#20986;&#36827;&#31243;&#12289;&#32456;&#27490;&#33050;&#26412;&#25191;&#34892;&#65292;2&#31186;&#20043;&#21518;&#36824;&#26159;&#20250;&#36755;&#20986;123&#12290;&#36825;&#23601;&#26159;&#35828;&#65292;Promise &#20869;&#37096;&#30340;&#38169;&#35823;&#19981;&#20250;&#24433;&#21709;&#21040; Promise &#22806;&#37096;&#30340;&#20195;&#30721;&#65292;&#36890;&#20439;&#30340;&#35828;&#27861;&#23601;&#26159;&#8220;Promise &#20250;&#21507;&#25481;&#38169;&#35823;&#8221;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1506354667175" ID="ID_270576150" MODIFIED="1506354676587">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      Promise.all&#26041;&#27861;&#29992;&#20110;&#23558;&#22810;&#20010; Promise &#23454;&#20363;&#65292;&#21253;&#35013;&#25104;&#19968;&#20010;&#26032;&#30340; Promise &#23454;&#20363;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      var p = Promise.all([p1, p2, p3]);
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;Promise.all&#26041;&#27861;&#25509;&#21463;&#19968;&#20010;&#25968;&#32452;&#20316;&#20026;&#21442;&#25968;&#65292;p1&#12289;p2&#12289;p3&#37117;&#26159; Promise &#23454;&#20363;&#65292;&#22914;&#26524;&#19981;&#26159;&#65292;&#23601;&#20250;&#20808;&#35843;&#29992;&#19979;&#38754;&#35762;&#21040;&#30340;Promise.resolve&#26041;&#27861;&#65292;&#23558;&#21442;&#25968;&#36716;&#20026; Promise &#23454;&#20363;&#65292;&#20877;&#36827;&#19968;&#27493;&#22788;&#29702;&#12290;&#65288;Promise.all&#26041;&#27861;&#30340;&#21442;&#25968;&#21487;&#20197;&#19981;&#26159;&#25968;&#32452;&#65292;&#20294;&#24517;&#39035;&#20855;&#26377; Iterator &#25509;&#21475;&#65292;&#19988;&#36820;&#22238;&#30340;&#27599;&#20010;&#25104;&#21592;&#37117;&#26159; Promise &#23454;&#20363;&#12290;&#65289;
    </p>
    <p>
      
    </p>
    <p>
      p&#30340;&#29366;&#24577;&#30001;p1&#12289;p2&#12289;p3&#20915;&#23450;&#65292;&#20998;&#25104;&#20004;&#31181;&#24773;&#20917;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      &#65288;1&#65289;&#21482;&#26377;p1&#12289;p2&#12289;p3&#30340;&#29366;&#24577;&#37117;&#21464;&#25104;fulfilled&#65292;p&#30340;&#29366;&#24577;&#25165;&#20250;&#21464;&#25104;fulfilled&#65292;&#27492;&#26102;p1&#12289;p2&#12289;p3&#30340;&#36820;&#22238;&#20540;&#32452;&#25104;&#19968;&#20010;&#25968;&#32452;&#65292;&#20256;&#36882;&#32473;p&#30340;&#22238;&#35843;&#20989;&#25968;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      &#65288;2&#65289;&#21482;&#35201;p1&#12289;p2&#12289;p3&#20043;&#20013;&#26377;&#19968;&#20010;&#34987;rejected&#65292;p&#30340;&#29366;&#24577;&#23601;&#21464;&#25104;rejected&#65292;&#27492;&#26102;&#31532;&#19968;&#20010;&#34987;reject&#30340;&#23454;&#20363;&#30340;&#36820;&#22238;&#20540;&#65292;&#20250;&#20256;&#36882;&#32473;p&#30340;&#22238;&#35843;&#20989;&#25968;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1506355315175" ID="ID_1210543726" MODIFIED="1506355320324">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      Promise.race&#26041;&#27861;&#21516;&#26679;&#26159;&#23558;&#22810;&#20010;Promise&#23454;&#20363;&#65292;&#21253;&#35013;&#25104;&#19968;&#20010;&#26032;&#30340;Promise&#23454;&#20363;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      var p = Promise.race([p1, p2, p3]);
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;&#21482;&#35201;p1&#12289;p2&#12289;p3&#20043;&#20013;&#26377;&#19968;&#20010;&#23454;&#20363;&#29575;&#20808;&#25913;&#21464;&#29366;&#24577;&#65292;p&#30340;&#29366;&#24577;&#23601;&#36319;&#30528;&#25913;&#21464;&#12290;&#37027;&#20010;&#29575;&#20808;&#25913;&#21464;&#30340; Promise &#23454;&#20363;&#30340;&#36820;&#22238;&#20540;&#65292;&#23601;&#20256;&#36882;&#32473;p&#30340;&#22238;&#35843;&#20989;&#25968;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1506388927878" ID="ID_1828660048" MODIFIED="1506389071892">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#26377;&#26102;&#38656;&#35201;&#23558;&#29616;&#26377;&#23545;&#35937;&#36716;&#20026;Promise&#23545;&#35937;&#65292;Promise.resolve&#26041;&#27861;&#23601;&#36215;&#21040;&#36825;&#20010;&#20316;&#29992;&#12290;
    </p>
    <p>
      var jsPromise = Promise.resolve($.ajax('/whatever.json'));
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#23558;jQuery&#29983;&#25104;&#30340;deferred&#23545;&#35937;&#65292;&#36716;&#20026;&#19968;&#20010;&#26032;&#30340;Promise&#23545;&#35937;&#12290;
    </p>
    <p>
      Promise.resolve&#31561;&#20215;&#20110;&#19979;&#38754;&#30340;&#20889;&#27861;&#12290;
    </p>
    <p>
      Promise.resolve('foo')
    </p>
    <p>
      // &#31561;&#20215;&#20110;
    </p>
    <p>
      new Promise(resolve =&gt; resolve('foo'))
    </p>
    <p>
      Promise.resolve&#26041;&#27861;&#30340;&#21442;&#25968;&#20998;&#25104;&#22235;&#31181;&#24773;&#20917;&#12290;
    </p>
    <p>
      &#65288;1&#65289;&#21442;&#25968;&#26159;&#19968;&#20010;Promise&#23454;&#20363;
    </p>
    <p>
      &#22914;&#26524;&#21442;&#25968;&#26159;Promise&#23454;&#20363;&#65292;&#37027;&#20040;Promise.resolve&#23558;&#19981;&#20570;&#20219;&#20309;&#20462;&#25913;&#12289;&#21407;&#23553;&#19981;&#21160;&#22320;&#36820;&#22238;&#36825;&#20010;&#23454;&#20363;&#12290;
    </p>
    <p>
      &#65288;2&#65289;&#21442;&#25968;&#26159;&#19968;&#20010;thenable&#23545;&#35937;
    </p>
    <p>
      thenable&#23545;&#35937;&#25351;&#30340;&#26159;&#20855;&#26377;then&#26041;&#27861;&#30340;&#23545;&#35937;&#65292;&#27604;&#22914;&#19979;&#38754;&#36825;&#20010;&#23545;&#35937;&#12290;
    </p>
    <p>
      let thenable = {
    </p>
    <p>
      &#160;&#160;then: function(resolve, reject) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;resolve(42);
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      };
    </p>
    <p>
      Promise.resolve&#26041;&#27861;&#20250;&#23558;&#36825;&#20010;&#23545;&#35937;&#36716;&#20026;Promise&#23545;&#35937;&#65292;&#28982;&#21518;&#23601;&#31435;&#21363;&#25191;&#34892;thenable&#23545;&#35937;&#30340;then&#26041;&#27861;&#12290;
    </p>
    <p>
      let thenable = {
    </p>
    <p>
      &#160;&#160;then: function(resolve, reject) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;resolve(42);
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      };
    </p>
    <p>
      let p1 = Promise.resolve(thenable);
    </p>
    <p>
      p1.then(function(value) {
    </p>
    <p>
      &#160;&#160;console.log(value);&#160;&#160;// 42
    </p>
    <p>
      });
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;thenable&#23545;&#35937;&#30340;then&#26041;&#27861;&#25191;&#34892;&#21518;&#65292;&#23545;&#35937;p1&#30340;&#29366;&#24577;&#23601;&#21464;&#20026;resolved&#65292;&#20174;&#32780;&#31435;&#21363;&#25191;&#34892;&#26368;&#21518;&#37027;&#20010;then&#26041;&#27861;&#25351;&#23450;&#30340;&#22238;&#35843;&#20989;&#25968;&#65292;&#36755;&#20986;42&#12290;
    </p>
    <p>
      &#65288;3&#65289;&#21442;&#25968;&#19981;&#26159;&#20855;&#26377;then&#26041;&#27861;&#30340;&#23545;&#35937;&#65292;&#25110;&#26681;&#26412;&#23601;&#19981;&#26159;&#23545;&#35937;
    </p>
    <p>
      &#22914;&#26524;&#21442;&#25968;&#26159;&#19968;&#20010;&#21407;&#22987;&#20540;&#65292;&#25110;&#32773;&#26159;&#19968;&#20010;&#19981;&#20855;&#26377;then&#26041;&#27861;&#30340;&#23545;&#35937;&#65292;&#21017;Promise.resolve&#26041;&#27861;&#36820;&#22238;&#19968;&#20010;&#26032;&#30340;Promise&#23545;&#35937;&#65292;&#29366;&#24577;&#20026;resolved&#12290;
    </p>
    <p>
      var p = Promise.resolve('Hello');
    </p>
    <p>
      p.then(function (s){
    </p>
    <p>
      &#160;&#160;console.log(s)
    </p>
    <p>
      });
    </p>
    <p>
      // Hello
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#29983;&#25104;&#19968;&#20010;&#26032;&#30340;Promise&#23545;&#35937;&#30340;&#23454;&#20363;p&#12290;&#30001;&#20110;&#23383;&#31526;&#20018;Hello&#19981;&#23646;&#20110;&#24322;&#27493;&#25805;&#20316;&#65288;&#21028;&#26029;&#26041;&#27861;&#26159;&#23383;&#31526;&#20018;&#23545;&#35937;&#19981;&#20855;&#26377;then&#26041;&#27861;&#65289;&#65292;&#36820;&#22238;Promise&#23454;&#20363;&#30340;&#29366;&#24577;&#20174;&#19968;&#29983;&#25104;&#23601;&#26159;resolved&#65292;&#25152;&#20197;&#22238;&#35843;&#20989;&#25968;&#20250;&#31435;&#21363;&#25191;&#34892;&#12290;Promise.resolve&#26041;&#27861;&#30340;&#21442;&#25968;&#65292;&#20250;&#21516;&#26102;&#20256;&#32473;&#22238;&#35843;&#20989;&#25968;&#12290;
    </p>
    <p>
      &#65288;4&#65289;&#19981;&#24102;&#26377;&#20219;&#20309;&#21442;&#25968;
    </p>
    <p>
      Promise.resolve&#26041;&#27861;&#20801;&#35768;&#35843;&#29992;&#26102;&#19981;&#24102;&#21442;&#25968;&#65292;&#30452;&#25509;&#36820;&#22238;&#19968;&#20010;resolved&#29366;&#24577;&#30340;Promise&#23545;&#35937;&#12290;
    </p>
    <p>
      &#25152;&#20197;&#65292;&#22914;&#26524;&#24076;&#26395;&#24471;&#21040;&#19968;&#20010;Promise&#23545;&#35937;&#65292;&#27604;&#36739;&#26041;&#20415;&#30340;&#26041;&#27861;&#23601;&#26159;&#30452;&#25509;&#35843;&#29992;Promise.resolve&#26041;&#27861;&#12290;
    </p>
    <p>
      var p = Promise.resolve();
    </p>
    <p>
      p.then(function () {
    </p>
    <p>
      &#160;&#160;// ...
    </p>
    <p>
      });
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#30340;&#21464;&#37327;p&#23601;&#26159;&#19968;&#20010;Promise&#23545;&#35937;&#12290;
    </p>
    <p>
      &#38656;&#35201;&#27880;&#24847;&#30340;&#26159;&#65292;&#31435;&#21363;resolve&#30340;Promise&#23545;&#35937;&#65292;&#26159;&#22312;&#26412;&#36718;&#8220;&#20107;&#20214;&#24490;&#29615;&#8221;&#65288;event loop&#65289;&#30340;&#32467;&#26463;&#26102;&#65292;&#32780;&#19981;&#26159;&#22312;&#19979;&#19968;&#36718;&#8220;&#20107;&#20214;&#24490;&#29615;&#8221;&#30340;&#24320;&#22987;&#26102;&#12290;
    </p>
    <p>
      setTimeout(function () {
    </p>
    <p>
      &#160;&#160;console.log('three');
    </p>
    <p>
      }, 0);
    </p>
    <p>
      Promise.resolve().then(function () {
    </p>
    <p>
      &#160;&#160;console.log('two');
    </p>
    <p>
      });
    </p>
    <p>
      console.log('one');
    </p>
    <p>
      // one
    </p>
    <p>
      // two
    </p>
    <p>
      // three
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;setTimeout(fn, 0)&#22312;&#19979;&#19968;&#36718;&#8220;&#20107;&#20214;&#24490;&#29615;&#8221;&#24320;&#22987;&#26102;&#25191;&#34892;&#65292;Promise.resolve()&#22312;&#26412;&#36718;&#8220;&#20107;&#20214;&#24490;&#29615;&#8221;&#32467;&#26463;&#26102;&#25191;&#34892;&#65292;console.log('one')&#21017;&#26159;&#31435;&#21363;&#25191;&#34892;&#65292;&#22240;&#27492;&#26368;&#20808;&#36755;&#20986;&#12290;
    </p>
  </body>
</html>
</richcontent>
</node>
<node CREATED="1506394827066" ID="ID_1756657684" MODIFIED="1506394848697">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      Promise.reject(reason)&#26041;&#27861;&#20063;&#20250;&#36820;&#22238;&#19968;&#20010;&#26032;&#30340; Promise &#23454;&#20363;&#65292;&#35813;&#23454;&#20363;&#30340;&#29366;&#24577;&#20026;rejected&#12290;
    </p>
    <p>
      var p = Promise.reject('&#20986;&#38169;&#20102;');
    </p>
    <p>
      // &#31561;&#21516;&#20110;
    </p>
    <p>
      var p = new Promise((resolve, reject) =&gt; reject('&#20986;&#38169;&#20102;'))
    </p>
    <p>
      p.then(null, function (s) {
    </p>
    <p>
      &#160;&#160;console.log(s)
    </p>
    <p>
      });
    </p>
    <p>
      // &#20986;&#38169;&#20102;
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#29983;&#25104;&#19968;&#20010;Promise&#23545;&#35937;&#30340;&#23454;&#20363;p&#65292;&#29366;&#24577;&#20026;rejected&#65292;&#22238;&#35843;&#20989;&#25968;&#20250;&#31435;&#21363;&#25191;&#34892;&#12290;
    </p>
    <p>
      &#27880;&#24847;&#65292;Promise.reject()&#26041;&#27861;&#30340;&#21442;&#25968;&#65292;&#20250;&#21407;&#23553;&#19981;&#21160;&#22320;&#20316;&#20026;reject&#30340;&#29702;&#30001;&#65292;&#21464;&#25104;&#21518;&#32493;&#26041;&#27861;&#30340;&#21442;&#25968;&#12290;&#36825;&#19968;&#28857;&#19982;Promise.resolve&#26041;&#27861;&#19981;&#19968;&#33268;&#12290;
    </p>
    <p>
      const thenable = {
    </p>
    <p>
      &#160;&#160;then(resolve, reject) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;reject('&#20986;&#38169;&#20102;');
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      };
    </p>
    <p>
      Promise.reject(thenable)
    </p>
    <p>
      .catch(e =&gt; {
    </p>
    <p>
      &#160;&#160;console.log(e === thenable)
    </p>
    <p>
      })
    </p>
    <p>
      // true
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;Promise.reject&#26041;&#27861;&#30340;&#21442;&#25968;&#26159;&#19968;&#20010;thenable&#23545;&#35937;&#65292;&#25191;&#34892;&#20197;&#21518;&#65292;&#21518;&#38754;catch&#26041;&#27861;&#30340;&#21442;&#25968;&#19981;&#26159;reject&#25243;&#20986;&#30340;&#8220;&#20986;&#38169;&#20102;&#8221;&#36825;&#20010;&#23383;&#31526;&#20018;&#65292;&#32780;&#26159;thenable&#23545;&#35937;&#12290;
    </p>
  </body>
</html>
</richcontent>
</node>
<node CREATED="1506395772272" ID="ID_524581060" MODIFIED="1506395784265">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#23454;&#38469;&#24320;&#21457;&#20013;&#65292;&#32463;&#24120;&#36935;&#21040;&#19968;&#31181;&#24773;&#20917;&#65306;&#19981;&#30693;&#36947;&#25110;&#32773;&#19981;&#24819;&#21306;&#20998;&#65292;&#20989;&#25968;f&#26159;&#21516;&#27493;&#20989;&#25968;&#36824;&#26159;&#24322;&#27493;&#25805;&#20316;&#65292;&#20294;&#26159;&#24819;&#29992; Promise &#26469;&#22788;&#29702;&#23427;&#12290;&#22240;&#20026;&#36825;&#26679;&#23601;&#21487;&#20197;&#19981;&#31649;f&#26159;&#21542;&#21253;&#21547;&#24322;&#27493;&#25805;&#20316;&#65292;&#37117;&#29992;then&#26041;&#27861;&#25351;&#23450;&#19979;&#19968;&#27493;&#27969;&#31243;&#65292;&#29992;catch&#26041;&#27861;&#22788;&#29702;f&#25243;&#20986;&#30340;&#38169;&#35823;&#12290;&#19968;&#33324;&#23601;&#20250;&#37319;&#29992;&#19979;&#38754;&#30340;&#20889;&#27861;&#12290;
    </p>
    <p>
      Promise.resolve().then(f)
    </p>
    <p>
      &#19978;&#38754;&#30340;&#20889;&#27861;&#26377;&#19968;&#20010;&#32570;&#28857;&#65292;&#23601;&#26159;&#22914;&#26524;f&#26159;&#21516;&#27493;&#20989;&#25968;&#65292;&#37027;&#20040;&#23427;&#20250;&#22312;&#26412;&#36718;&#20107;&#20214;&#24490;&#29615;&#30340;&#26411;&#23614;&#25191;&#34892;&#12290;
    </p>
    <p>
      const f = () =&gt; console.log('now');
    </p>
    <p>
      Promise.resolve().then(f);
    </p>
    <p>
      console.log('next');
    </p>
    <p>
      // next
    </p>
    <p>
      // now
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;&#20989;&#25968;f&#26159;&#21516;&#27493;&#30340;&#65292;&#20294;&#26159;&#29992; Promise &#21253;&#35013;&#20102;&#20197;&#21518;&#65292;&#23601;&#21464;&#25104;&#24322;&#27493;&#25191;&#34892;&#20102;&#12290;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1508074892808" ID="ID_405316166" MODIFIED="1508074894575" POSITION="right" TEXT="Proxy">
<node CREATED="1508075459311" ID="ID_1052342204" MODIFIED="1508126392251">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#27010;&#36848;
    </p>
    <p>
      1&#12289;Proxy &#29992;&#20110;&#20462;&#25913;&#26576;&#20123;&#25805;&#20316;&#30340;&#40664;&#35748;&#34892;&#20026;&#65292;&#31561;&#21516;&#20110;&#22312;&#35821;&#35328;&#23618;&#38754;&#20570;&#20986;&#20462;&#25913;&#65292;&#25152;&#20197;&#23646;&#20110;&#19968;&#31181;&#8220;&#20803;&#32534;&#31243;&#8221;&#65288;meta programming&#65289;&#65292;&#21363;&#23545;&#32534;&#31243;&#35821;&#35328;&#36827;&#34892;&#32534;&#31243;&#12290;
    </p>
    <p>
      2&#12289;&#23454;&#20363;
    </p>
    <p>
      var proxy = new Proxy({}, {
    </p>
    <p>
      &#160;&#160;get: function(target, property) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;return 35;
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      });
    </p>
    <p>
      proxy.time // 35
    </p>
    <p>
      proxy.name // 35
    </p>
    <p>
      proxy.title // 35
    </p>
    <p>
      &#19978;&#38754;&#20195;&#30721;&#20013;&#65292;&#30001;&#20110;&#25318;&#25130;&#20989;&#25968;&#24635;&#26159;&#36820;&#22238;35&#65292;&#25152;&#20197;&#35775;&#38382;&#20219;&#20309;&#23646;&#24615;&#37117;&#24471;&#21040;35&#12290;
    </p>
    <p>
      3&#12289;Proxy &#23454;&#20363;&#20063;&#21487;&#20197;&#20316;&#20026;&#20854;&#20182;&#23545;&#35937;&#30340;&#21407;&#22411;&#23545;&#35937;&#12290;
    </p>
    <p>
      var proxy = new Proxy({}, {
    </p>
    <p>
      &#160;&#160;get: function(target, property) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;return 35;
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      });
    </p>
    <p>
      let obj = Object.create(proxy);
    </p>
    <p>
      obj.time // 35
    </p>
    <p>
      4&#12289;&#19979;&#38754;&#26159; Proxy &#25903;&#25345;&#30340;&#25318;&#25130;&#25805;&#20316;&#19968;&#35272;&#65292;&#19968;&#20849;13&#31181;&#12290;
    </p>
    <p>
      &#65288;1&#65289;&#12289;get(target, propKey, receiver)&#65306;&#25318;&#25130;&#23545;&#35937;&#23646;&#24615;&#30340;&#35835;&#21462;&#65292;&#27604;&#22914;proxy.foo&#21644;proxy['foo']&#12290;
    </p>
    <p>
      &#65288;2&#65289;&#12289;set(target, propKey, value, receiver)&#65306;&#25318;&#25130;&#23545;&#35937;&#23646;&#24615;&#30340;&#35774;&#32622;&#65292;&#27604;&#22914;proxy.foo = v&#25110;proxy['foo'] = v&#65292;&#36820;&#22238;&#19968;&#20010;&#24067;&#23572;&#20540;&#12290;
    </p>
    <p>
      &#65288;3&#65289;&#12289;has(target, propKey)&#65306;&#25318;&#25130;propKey in proxy&#30340;&#25805;&#20316;&#65292;&#36820;&#22238;&#19968;&#20010;&#24067;&#23572;&#20540;&#12290;
    </p>
    <p>
      &#65288;4&#65289;&#12289;deleteProperty(target, propKey)&#65306;&#25318;&#25130;delete proxy[propKey]&#30340;&#25805;&#20316;&#65292;&#36820;&#22238;&#19968;&#20010;&#24067;&#23572;&#20540;&#12290;
    </p>
    <p>
      &#65288;5&#65289;&#12289;ownKeys(target)&#65306;&#25318;&#25130;Object.getOwnPropertyNames(proxy)&#12289;Object.getOwnPropertySymbols(proxy)&#12289;Object.keys(proxy)&#65292;&#36820;&#22238;&#19968;&#20010;&#25968;&#32452;&#12290;&#35813;&#26041;&#27861;&#36820;&#22238;&#30446;&#26631;&#23545;&#35937;&#25152;&#26377;&#33258;&#36523;&#30340;&#23646;&#24615;&#30340;&#23646;&#24615;&#21517;&#65292;&#32780;Object.keys()&#30340;&#36820;&#22238;&#32467;&#26524;&#20165;&#21253;&#25324;&#30446;&#26631;&#23545;&#35937;&#33258;&#36523;&#30340;&#21487;&#36941;&#21382;&#23646;&#24615;&#12290;
    </p>
    <p>
      &#65288;6&#65289;&#12289;getOwnPropertyDescriptor(target, propKey)&#65306;&#25318;&#25130;Object.getOwnPropertyDescriptor(proxy, propKey)&#65292;&#36820;&#22238;&#23646;&#24615;&#30340;&#25551;&#36848;&#23545;&#35937;&#12290;
    </p>
    <p>
      &#65288;7&#65289;&#12289;defineProperty(target, propKey, propDesc)&#65306;&#25318;&#25130;Object.defineProperty(proxy, propKey, propDesc&#65289;&#12289;Object.defineProperties(proxy, propDescs)&#65292;&#36820;&#22238;&#19968;&#20010;&#24067;&#23572;&#20540;&#12290;
    </p>
    <p>
      &#65288;8&#65289;&#12289;preventExtensions(target)&#65306;&#25318;&#25130;Object.preventExtensions(proxy)&#65292;&#36820;&#22238;&#19968;&#20010;&#24067;&#23572;&#20540;&#12290;
    </p>
    <p>
      &#65288;9&#65289;&#12289;getPrototypeOf(target)&#65306;&#25318;&#25130;Object.getPrototypeOf(proxy)&#65292;&#36820;&#22238;&#19968;&#20010;&#23545;&#35937;&#12290;
    </p>
    <p>
      &#65288;10&#65289;&#12289;isExtensible(target)&#65306;&#25318;&#25130;Object.isExtensible(proxy)&#65292;&#36820;&#22238;&#19968;&#20010;&#24067;&#23572;&#20540;&#12290;
    </p>
    <p>
      &#65288;11&#65289;&#12289;setPrototypeOf(target, proto)&#65306;&#25318;&#25130;Object.setPrototypeOf(proxy, proto)&#65292;&#36820;&#22238;&#19968;&#20010;&#24067;&#23572;&#20540;&#12290;&#22914;&#26524;&#30446;&#26631;&#23545;&#35937;&#26159;&#20989;&#25968;&#65292;&#37027;&#20040;&#36824;&#26377;&#20004;&#31181;&#39069;&#22806;&#25805;&#20316;&#21487;&#20197;&#25318;&#25130;&#12290;
    </p>
    <p>
      &#65288;12&#65289;&#12289;apply(target, object, args)&#65306;&#25318;&#25130; Proxy &#23454;&#20363;&#20316;&#20026;&#20989;&#25968;&#35843;&#29992;&#30340;&#25805;&#20316;&#65292;&#27604;&#22914;proxy(...args)&#12289;proxy.call(object, ...args)&#12289;proxy.apply(...)&#12290;
    </p>
    <p>
      &#65288;13&#65289;&#12289;construct(target, args)&#65306;&#25318;&#25130; Proxy &#23454;&#20363;&#20316;&#20026;&#26500;&#36896;&#20989;&#25968;&#35843;&#29992;&#30340;&#25805;&#20316;&#65292;&#27604;&#22914;new proxy(...args)&#12290;
    </p>
  </body>
</html>
</richcontent>
</node>
<node CREATED="1508126468921" ID="ID_143052524" MODIFIED="1508158406579">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#25318;&#25130;&#26041;&#27861;&#20171;&#32461;
    </p>
    <p>
      1&#12289;get()
    </p>
    <p>
      &#65288;1&#65289;&#12289;&#21487;&#20197;&#25509;&#21463;&#19977;&#20010;&#21442;&#25968;&#65292;&#20381;&#27425;&#20026;&#30446;&#26631;&#23545;&#35937;&#12289;&#23646;&#24615;&#21517;&#21644; proxy &#23454;&#20363;&#26412;&#36523;&#65288;&#20063;&#21487;&#33021;&#26159;&#32487;&#25215;&#33258;proxy&#30340;&#23545;&#35937;&#65289;&#65292;&#20854;&#20013;&#26368;&#21518;&#19968;&#20010;&#21442;&#25968;&#21487;&#36873;&#12290;
    </p>
    <p>
      &#65288;2&#65289;&#12289;&#22914;&#26524;&#19968;&#20010;&#23646;&#24615;&#19981;&#21487;&#37197;&#32622;&#65288;configurable&#65289;&#21644;&#19981;&#21487;&#20889;&#65288;writable&#65289;&#65292;&#27880;&#24847;&#65292;&#26159;configurable&#21644;writable&#21516;&#26102;&#20026;false&#65292;&#21017;&#35813;&#23646;&#24615;&#19981;&#33021;&#34987;&#20195;&#29702;&#65292;&#36890;&#36807; Proxy &#23545;&#35937;&#35775;&#38382;&#35813;&#23646;&#24615;&#20250;&#25253;&#38169;&#12290;
    </p>
    <p>
      const target = Object.defineProperties({}, {
    </p>
    <p>
      &#160;&#160;foo: {
    </p>
    <p>
      &#160;&#160;&#160;&#160;value: 123,
    </p>
    <p>
      &#160;&#160;&#160;&#160;writable: false,
    </p>
    <p>
      &#160;&#160;&#160;&#160;configurable: false
    </p>
    <p>
      &#160;&#160;},
    </p>
    <p>
      });
    </p>
    <p>
      const handler = {
    </p>
    <p>
      &#160;&#160;get(target, propKey) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;//if('foo' == propKey) return target[propKey]; &#21152;&#19978;&#36825;&#34892;&#23601;&#19981;&#25253;&#38169;&#65292;&#22240;&#20026;&#27809;&#26377;&#23581;&#35797;&#20462;&#25913;foo&#30340;&#20540;
    </p>
    <p>
      &#160;&#160;&#160;&#160;return 'abc';
    </p>
    <p>
      &#160;&#160;}
    </p>
    <p>
      };
    </p>
    <p>
      const proxy = new Proxy(target, handler);
    </p>
    <p>
      proxy.foo
    </p>
    <p>
      // &#20250;&#20986;&#38169;&#65292;&#22240;&#20026;&#23581;&#35797;&#23558;foo&#23646;&#24615;&#30340;&#20540;&#25913;&#20026;'abc'&#65292;&#32780;foo&#23646;&#24615;&#26159;&#19981;&#21487;&#20889;&#21644;&#19981;&#21487;&#37197;&#32622;&#30340;
    </p>
    <p>
      &#65288;3&#65289;&#12289;&#24403;proxy&#23545;&#35937;&#29992;&#20110;&#21407;&#22411;&#26102;&#65292;&#35835;&#21462;&#23545;&#35937;&#23646;&#24615;&#26102;&#65292;&#22914;&#26524;&#23545;&#35937;&#33258;&#36523;&#25317;&#26377;&#35813;&#23646;&#24615;&#21017;&#30452;&#25509;&#35835;&#21462;&#65292;proxy&#19981;&#20171;&#20837;&#65292;&#22914;&#26524;&#23545;&#35937;&#33258;&#36523;&#27809;&#26377;&#30340;&#23646;&#24615;&#65292;&#27492;&#26102;&#21040;&#21407;&#22411;&#38142;&#20013;&#26597;&#25214;&#65292;&#27492;&#26102;proxy&#20250;&#20171;&#20837;
    </p>
    <p>
      const handler = {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;get(target, propKey) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return 'abc';
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      };
    </p>
    <p>
      const proxy = new Proxy({
    </p>
    <p>
      &#160;&#160;&#160;&#160;xxx: 1
    </p>
    <p>
      }, handler);
    </p>
    <p>
      const obj = Object.create(proxy);
    </p>
    <p>
      obj.yyy = 111;
    </p>
    <p>
      console.log(obj.yyy); // 111&#65292;&#22240;&#20026;yyy&#26159;obj&#33258;&#36523;&#30340;&#23646;&#24615;&#65292;&#27809;&#26377;&#35775;&#38382;&#21040;proxy
    </p>
    <p>
      console.log(obj.xxx); // abc&#65292;xxx&#26159;&#32487;&#25215;proxy&#30340;&#65292;&#25152;&#20197;&#35835;&#21462;&#30340;&#26102;&#20505;&#20250;&#36208;proxy
    </p>
    <p>
      obj.xxx = 222;
    </p>
    <p>
      console.log(obj.xxx); // 222&#65292;&#37325;&#26032;&#36171;&#20540;&#21518;&#65292;xxx&#25104;&#20102;obj&#33258;&#36523;&#30340;&#23646;&#24615;&#65292;&#35835;&#21462;&#19981;&#32463;&#36807;proxy
    </p>
    <p>
      2&#12289;set()
    </p>
    <p>
      &#65288;1&#65289;&#12289;&#21487;&#20197;&#25509;&#21463;&#22235;&#20010;&#21442;&#25968;&#65292;&#20381;&#27425;&#20026;&#30446;&#26631;&#23545;&#35937;&#12289;&#23646;&#24615;&#21517;&#12289;&#23646;&#24615;&#20540;&#21644; Proxy &#23454;&#20363;&#26412;&#36523;&#65292;&#20854;&#20013;&#26368;&#21518;&#19968;&#20010;&#21442;&#25968;&#21487;&#36873;&#12290;
    </p>
    <p>
      &#65288;2&#65289;&#12289;&#22914;&#26524;&#30446;&#26631;&#23545;&#35937;&#33258;&#36523;&#30340;&#26576;&#20010;&#23646;&#24615;&#65292;&#19981;&#21487;&#20889;&#20063;&#19981;&#21487;&#37197;&#32622;&#65292;&#37027;&#20040;set&#19981;&#24471;&#25913;&#21464;&#36825;&#20010;&#23646;&#24615;&#30340;&#20540;&#65292;&#21482;&#33021;&#36820;&#22238;&#21516;&#26679;&#30340;&#20540;&#65292;&#21542;&#21017;&#25253;&#38169;&#12290;
    </p>
    <p>
      &#65288;3&#65289;&#12289;&#21033;&#29992;set&#26041;&#27861;&#65292;&#36824;&#21487;&#20197;&#25968;&#25454;&#32465;&#23450;&#65292;&#21363;&#27599;&#24403;&#23545;&#35937;&#21457;&#29983;&#21464;&#21270;&#26102;&#65292;&#20250;&#33258;&#21160;&#26356;&#26032; DOM&#12290;
    </p>
    <p>
      3&#12289;apply()
    </p>
    <p>
      &#65288;1&#65289;&#12289;&#20195;&#29702;Function&#25552;&#20379;apply&#26041;&#27861;&#25165;&#26377;&#29992;&#65292;&#20195;&#29702;&#23545;&#35937;&#30340;proxy&#26159;&#19981;&#33021;&#20316;&#20026;&#20989;&#25968;&#35843;&#29992;&#30340;
    </p>
    <p>
      &#65288;2&#65289;&#12289;&#25318;&#25130;&#20989;&#25968;&#30340;&#35843;&#29992;&#12289;call&#21644;apply&#25805;&#20316;&#12290;&#21487;&#20197;&#25509;&#21463;&#19977;&#20010;&#21442;&#25968;&#65292;&#20998;&#21035;&#26159;&#30446;&#26631;&#23545;&#35937;&#65288;&#19968;&#20010;&#20989;&#25968;&#65289;&#12289;&#30446;&#26631;&#23545;&#35937;&#30340;&#19978;&#19979;&#25991;&#23545;&#35937;&#65288;&#30446;&#26631;&#23545;&#35937;&#30340;this&#20540;&#65289;&#21644;&#30446;&#26631;&#23545;&#35937;&#30340;&#21442;&#25968;&#25968;&#32452;&#12290;
    </p>
    <p>
      &#65288;3&#65289;&#12289;&#30452;&#25509;&#35843;&#29992;Reflect.apply&#26041;&#27861;&#65292;&#20063;&#20250;&#34987;&#25318;&#25130;&#12290;
    </p>
    <p>
      Reflect.apply(proxy, null, [9, 10]) // 38
    </p>
    <p>
      4&#12289;has()
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</map>
